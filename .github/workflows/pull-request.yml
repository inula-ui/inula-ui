name: 'Pull Request'

on:
  pull_request_target:
    types: [assigned, opened, synchronize, reopened]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v2
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: pnpm/action-setup@v2
        with:
          version: '8'
          run_install: false
      - run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-store-
      - run: pnpm install
      - run: pnpm run lint:affected
      - run: pnpm run lint:style
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v2
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: pnpm/action-setup@v2
        with:
          version: '8'
          run_install: false
      - run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-store-
      - run: pnpm install
      - run: pnpm run test:affected
      - uses: codecov/codecov-action@v3
        with:
          directory: './coverage/libs/'
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [16, 18]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v2
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - uses: pnpm/action-setup@v2
        with:
          version: '8'
          run_install: false
      - run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-store-
      - run: pnpm install
      - run: pnpm run build:affected
  pr-preview:
    runs-on: ubuntu-latest
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '<!-- pr-preview-comment -->'
      - name: Create comment
        if: steps.fc.outputs.comment-id == ''
        uses: peter-evans/create-or-update-comment@v3
        id: couc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            <!-- pr-preview-comment -->
            After the build is complete, you can preview the website here. :coffee: :coffee: :coffee:
      - name: Update comment
        if: steps.fc.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body: |
            <!-- pr-preview-comment -->
            After the build is complete, you can preview the website here. :coffee: :coffee: :coffee:
          edit-mode: replace
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: pnpm/action-setup@v2
        with:
          version: '8'
          run_install: false
      - run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-store-
      - run: pnpm install
      - run: pnpm exec nx run site:build --configuration=production --skip-nx-cache
      - run: cp ./dist/apps/site/index.html ./dist/apps/site/200.html
      - uses: dswistowski/surge-sh-action@v1
        with:
          domain: 'inula-ui-${{ github.sha }}.surge.sh'
          project: './dist/apps/site'
          login: ${{ secrets.SURGE_LOGIN }}
          token: ${{ secrets.SURGE_TOKEN }}
      - name: Update comment
        if: steps.fc.outputs.comment-id == ''
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.couc.outputs.comment-id }}
          body: |
            <!-- pr-preview-comment -->
            Website [preview](//inula-ui-${{ github.sha }}.surge.sh) has been generated!  :tada: :tada: :tada:
          edit-mode: replace
      - name: Update comment
        if: steps.fc.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body: |
            <!-- pr-preview-comment -->
            Website [preview](//inula-ui-${{ github.sha }}.surge.sh) has been generated!  :tada: :tada: :tada:
          edit-mode: replace
